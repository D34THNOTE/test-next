// pages/api/login.js
import { compare } from 'bcrypt';
import { sign } from 'jsonwebtoken';
import cookie from 'cookie';

// mock user data
const users = [
    {
        id: 1,
        username: 'admin',
        password: '$2a$10$WzZyBZyJQlKZVgK5qgRdUeYH7Xxhs9kDDQNUZ5JpOxZ6LzFlnU/1K', // hashed password for 'password'
    },
];

export default async function login(req, res) {
    if (req.method === 'POST') {
        const { username, password } = req.body;
        const user = users.find((user) => user.username === username);

        if (user) {
            const passwordMatch = await compare(password, user.password);
            if (passwordMatch) {
                const claims = { sub: user.id, username: user.username };
                const jwt = sign(claims, process.env.JWT_SECRET, { expiresIn: '1h' });

                res.setHeader(
                    'Set-Cookie',
                    cookie.serialize('auth', jwt, {
                        httpOnly: true,
                        secure: process.env.NODE_ENV !== 'development',
                        sameSite: 'strict',
                        maxAge: 3600,
                        path: '/',
                    })
                );

                res.status(200).json({ message: 'Logged in' });
            } else {
                res.status(401).json({ message: 'Invalid credentials' });
            }
        } else {
            res.status(401).json({ message: 'Invalid credentials' });
        }
    } else {
        res.setHeader('Allow', ['POST']);
        res.status(405).end(`Method ${req.method} Not Allowed`);
    }
}
